Scope: A tip about using YAML files
-----------------------------------

	# sample19.rb
	require 'yaml'
	
	Shoes.app :width => 200, :height => 100 do
	  Gang = Struct.new :name, :country
	  gangs = YAML.load_file(Dir.pwd + '/gangs.yml')
	  gangs.each{|g| para g.name, g.country, "\n"}
	end

**sample19.png**

![sample19.png](http://github.com/ashbb/shoes_tutorial_html/raw/master/images/sample19.png)

The top-level namespace in any Shoes app is Shoes <br>
so in the sample <br>

	Gang = Struct.new :name, :country <br>

we actually create a Shoes::Gang struct, not a Gang struct.  <br>
To achieve the desired behavior, we will have to modify the statement like this (see sample19-1.rb).  <br>

	::Gang = Struct.new :name, :country <br>

Here you can see the updated example:


	# sample19-1.rb
	require 'yaml'
	
	Shoes.app :width => 200, :height => 100 do
	  ::Gang = Struct.new :name, :country
	  gangs = YAML.load_file(Dir.pwd + '/gangs.yml')
	  gangs.each{|g| para g.name, g.country, "\n"}
	end

**sample19-1.png**

![sample19-1.png](http://github.com/ashbb/shoes_tutorial_html/raw/master/images/sample19-1.png)


Policeman
---------

Policeman includes Ruby 1.9. So, need to re-create the yaml file. 

Use `make_sample19_yaml_for_ruby1.9.rb`. It can create `gangs-19.yml` file. Policeman can reald (load) the file.

